{"version":3,"sources":["feature/EmptyContent/logo.svg","feature/SearchBar/SearchBar.js","feature/bookends/Header.jsx","feature/TotalAlerts/TotalAlerts.jsx","feature/LastUpdate/LastUpdate.jsx","feature/Attrib/Attrib.jsx","feature/bookends/Footer.jsx","feature/EmptyContent/EmptyContent.jsx","feature/SearchResults/AlertDetail/AlertDetail.jsx","feature/SearchResults/Alert/Alert.jsx","feature/SearchResults/SearchResults.jsx","feature/SearchResults/SearchInfo.jsx","api/getJsonClient.js","api/store.js","domain/alerts.js","domain/arrayHelpers.js","domain/stationSearch.js","config/depGraph.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","StationSelect","_ref","initial","placeholder","onChange","extraClass","react_default","a","createElement","className","concat","name","toLowerCase","type","value","SearchButton","SearchBar","props","_this","Object","classCallCheck","this","_this$props","possibleConstructorReturn","getPrototypeOf","call","src","dst","state","handleChange","bind","assertThisInitialized","handleSubmit","setState","key","_this2","event","defineProperty","target","preventDefault","_this$state","window","history","pushState","search","onSubmit","SearchBar_StationSelect","SearchBar_SearchButton","Component","Header","SearchBar_SearchBar","AlertsBadge","count","TotalAlerts","_ref2","alerts","TotalAlerts_AlertsBadge","total","ingested","pending","LastUpdate","lastSync","lastUpdate","Attrib","href","rel","Footer","TotalAlerts_TotalAlerts","LastUpdate_LastUpdate","Attrib_Attrib","EmptyContent","logo","alt","Uningested","Outage","area","from","to","desc","iso","AlertDetail","id","title","outages","link","map","it","i","AlertDetail_Outage","assign","AlertDetail_Uningested","Alert","line","plannedWorks","getAlertDetails","getDetail","detail","AlertDetail_AlertDetail","detailById","SearchResults","Alert_Alert","SearchInfo","cityLoop","lines","stations","error","join","getJsonClient","url","fetch","_fetch","apply","arguments","toString","then","response","json","details","fetchDate","releaseDate","metroVars","calculateAlertCounts","keys","length","k","filter","store","asyncToGenerator","regenerator_default","mark","_callee","metroVarsClient","wrap","_context","prev","next","sent","abrupt","save","_ref3","healthboardAlerts","alertDetails","alertCounts","lastUpdated","stationsByLineName","network","cityLoopStations","stop","_x","idMapToList","objectSpread","convertAlerts","line_name","planned_works_list","alertsForLines","includes","detailIdsForAlerts","Array","Set","flatMap","alertsForLinesStations","linesAlerts","detailIds","lineAlert","works","alertsFilteredByDetailIds","healthboardClient","detailsClient","_ref4","healthboard","Promise","all","slicedToArray","list","fromEntries","anyIntersection","aList","bList","reduce","acc","station","equalLists","zip","b","findLinesWithContiguousRange","searchResult","searchError","aLines","findLinesWith","bLines","short","long","smaller","containsAll","strictSubset","intersectsCityLoop","entries","toConsumableArray","stationRange","lineStations","iA","indexOf","iB","_ref5","_ref6","start","end","slice","reverse","stationSearch","_ref7","linesResult","publicJson","filename","process","toUpperCase","healthboardUrl","detailsUrl","metroVarsUrl","buildDepGraph","dataStore","alertsManager","searchManager","domain","App","searchInfo","loadQuerySearch","onpopstate","graph","params","URL","location","searchParams","_map","get","_map2","Header_Header","SearchInfo_SearchInfo","SearchResults_SearchResults","EmptyContent_EmptyContent","Footer_Footer","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8c393ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5901d734.svg\";","import React, { Component } from 'react'\n\nimport './style.css'\n\nconst StationSelect = ({ initial, placeholder, onChange, extraClass }) => (\n  <input {...{\n    className: `search ${extraClass} bordered radius-m`,\n    name: placeholder.toLowerCase(),\n    type: 'text',\n    value: initial,\n    placeholder,\n    onChange\n  }} />\n)\n\nconst SearchButton = () => (\n  <input className='search end bordered radius-m' type='submit' value='Search' />\n)\n\nclass SearchBar extends Component {\n  constructor (props) {\n    super(props)\n\n    const { src, dst } = this.props\n    this.state = { src, dst }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentWillReceiveProps (props) {\n    const { src, dst } = props\n    this.setState({ src, dst })\n  }\n\n  handleChange (key) {\n    return (event) => {\n      this.setState({\n        [key]: event.target.value\n      })\n    }\n  }\n\n  handleSubmit (event) {\n    event.preventDefault()\n    const { src, dst } = this.state\n    window.history.pushState(null, '', `?src=${src}&dst=${dst}`)\n    this.props.search(src, dst)\n  }\n\n  render () {\n    return (\n      <form className='search' onSubmit={this.handleSubmit}>\n        <StationSelect\n          initial={this.state.src}\n          placeholder='Origin'\n          onChange={this.handleChange('src')}\n          extraClass='start'\n        />\n        <StationSelect\n          initial={this.state.dst}\n          placeholder='Destination'\n          onChange={this.handleChange('dst')}\n          extraClass='middle'\n        />\n        <SearchButton />\n      </form>\n    )\n  }\n}\n\nexport { SearchBar }\n","import React from 'react'\n\nimport { SearchBar } from '../SearchBar'\nimport './style.css'\n\nconst Header = ({ search, src, dst }) => (\n  <header>\n    <span className='title'><span className='icon'>⚠</span> Legible Works</span>\n    <SearchBar {...{ search, src, dst }} />\n  </header>\n)\n\nexport { Header }\n","import React from 'react'\n\nimport './style.css'\n\nconst AlertsBadge = ({ count, type }) => (\n  <span className={`alert ${type} bordered radius-m`}>\n    {typeof (count) === 'number' ? count : '?'}\n  </span>\n)\n\nconst TotalAlerts = ({ alerts }) => (\n  <div>\n    <AlertsBadge count={alerts.total} type='total' /> alert details\n    (<AlertsBadge count={alerts.ingested} type='ingested' /> ingested,\n    {` `}<AlertsBadge count={alerts.pending} type='pending' /> pending)\n  </div>\n)\n\nexport { TotalAlerts }\n","import React from 'react'\n\nimport './style.css'\n\nconst LastUpdate = ({ lastSync, lastUpdate }) => (\n  <div>\n    Alerts Synced: <span className='updated'>{lastSync}</span>,\n    Last updated: <span className='updated'>{lastUpdate}</span>\n  </div>\n)\n\nexport { LastUpdate }\n","import React from 'react'\n\nimport './style.css'\n\nconst Attrib = () => (\n  <div>\n    Licensed under AGPL 3+.\n    Source at <a\n      href='https://github.com/orochi-kazu/metro-planned-works'\n      target='_blank' // eslint-disable-line react/jsx-no-target-blank\n      rel='noopener'\n    >GitHub</a>\n  </div>\n)\n\nexport { Attrib }\n","import React from 'react'\n\nimport { TotalAlerts } from '../TotalAlerts'\nimport { LastUpdate } from '../LastUpdate'\nimport { Attrib } from '../Attrib'\nimport './style.css'\n\nconst Footer = ({ alerts, lastSync, lastUpdate }) => (\n  <footer>\n    <TotalAlerts {...{ alerts }} />\n    <LastUpdate {...{ lastSync, lastUpdate }} />\n    <Attrib />\n  </footer>\n)\n\nexport { Footer }\n","import React from 'react'\n\nimport logo from './logo.svg'\nimport './style.css'\n\nconst EmptyContent = () => (\n  <div className='empty-content'>\n    <img className='logo' src={logo} alt='App logo: a caution sign' />\n  </div>\n)\n\nexport { EmptyContent }\n","import React from 'react'\n\nimport './style.css'\n\nconst Uningested = () => (\n  <div className='outage uningested bordered radius-m'>\n    Pending\n  </div>\n)\n\nconst Outage = ({ area, from, to }) => (\n  <div className='outage bordered radius-m'>\n    <div className='outage-desc'>&quot;{area.desc}&quot;</div>\n    <div>Starts: {from.iso}</div>\n    <div>Ends: {to.iso}</div>\n  </div>\n)\n\nconst AlertDetail = ({ id, title, outages, link }) => (\n  <div className='detail bordered radius-m'>\n    <div className='alert-title'>\n      <span>\n        {title}\n        <span className='nowrap'> (<a\n          href={link}\n          target='_blank' // eslint-disable-line react/jsx-no-target-blank\n          rel='noopener'\n        >Metro</a>)\n        </span>\n      </span>\n    </div>\n    <div>\n      {outages ? outages.map((it, i) => <Outage {...it} key={i} />) : <Uningested />}\n    </div>\n  </div>\n)\n\nexport { AlertDetail }\n","import React from 'react'\n\nimport { AlertDetail } from '../AlertDetail'\n\nimport './style.css'\n\nconst detailById = getAlertDetails => (id, title) => {\n  const detail = getAlertDetails(id)\n  return detail ? <AlertDetail {...detail} title={title} key={id} /> : null\n}\n\nconst Alert = ({ id, alerts, line, plannedWorks, getAlertDetails }) => {\n  if (!plannedWorks) {\n    return null\n  }\n  const getDetail = detailById(getAlertDetails)\n  return (\n    <div className='alert-summary bordered radius-m'>\n      <div className='alert-summary-title'>\n        <span className='alert-summary-title'>{line || 'Unnamed line'}</span>\n        {line ? '' : <span>&nbsp;({id})</span>}\n      </div>\n      {plannedWorks.map(it => getDetail(it.id, it.title))}\n    </div>\n  )\n}\n\nexport { Alert }\n","import React from 'react'\n\nimport { Alert } from './Alert'\n\nconst SearchResults = ({ alerts, getAlertDetails }) => alerts.map(it => (\n  <Alert {...it} getAlertDetails={getAlertDetails} key={it.id} />\n))\n\nexport { SearchResults }\n","import React from 'react'\n\nconst SearchInfo = ({ cityLoop, lines, stations, error }) =>\n  error ? (\n    <div className='results-intro'>\n      <div>Something went wrong: {error}</div>\n    </div>\n  ) : (\n    <div className='results-intro'>\n      <div>City Loop? {cityLoop ? 'Yes' : 'No'}</div>\n      <div>Lines: {(lines || []).join(', ')}</div>\n      <div>Stations: {(stations || []).join(', ')}</div>\n    </div>\n  )\n\nexport { SearchInfo }\n","const getJsonClient = url => ({\n  fetch: () => fetch(url).then(response => response.json())\n})\n\nexport { getJsonClient }\n","let alerts = []\n\nlet details = {\n  alerts: {},\n  fetchDate: '',\n  releaseDate: ''\n}\n\nlet metroVars = {}\n\nconst calculateAlertCounts = () => {\n  const keys = Object.keys(details.alerts)\n  const total = keys.length\n  const ingested = keys.map(k => details.alerts[k]).filter(it => it.outages).length\n  const pending = total - ingested\n\n  return { total, ingested, pending }\n}\n\nconst store = async ({ metroVarsClient }) => {\n  metroVars = await metroVarsClient.fetch()\n  return {\n    save: ({ healthboardAlerts, alertDetails }) => {\n      alerts = healthboardAlerts\n      details = alertDetails\n    },\n    alerts: () => alerts,\n    alertCounts: () => calculateAlertCounts(),\n    alertDetails: id => details.alerts[id],\n    lastSync: () => details.fetchDate,\n    lastUpdated: () => details.releaseDate,\n    stationsByLineName: () => metroVars.network || {},\n    cityLoopStations: () => metroVars.cityLoopStations\n  }\n}\n\nexport { store }\n","const idMapToList = map => Object.keys(map)\n  .map(it => ({\n    ...map[it],\n    id: it\n  }))\n\nconst idListToMap = list => Object.fromEntries(\n  list.map(it => [it.id, it])\n)\n\nconst convertAlerts = it => ({\n  id: it.id,\n  line: it.line_name,\n  plannedWorks: it.planned_works_list\n})\n\nconst alertsForLines = (alerts, lines) => alerts.filter(it => (lines || []).includes(it.line))\n\nconst detailIdsForAlerts = alerts => Array.from(new Set(\n  alerts.flatMap(it => it.plannedWorks.flatMap(it => it.id))\n))\n\nconst alertsFilteredByDetailIds = (alerts, detailIds) => alerts\n  // filter out unmatched alert ids\n  .map(lineAlert => ({\n    ...lineAlert,\n    plannedWorks: lineAlert.plannedWorks.filter(works => detailIds.includes(works.id))\n  }))\n  // filter out empty alerts\n  .filter(it => it.plannedWorks.length > 0)\n\nconst alertsForLinesStations = (alerts, lines, stations) => {\n  // find alerts for all lines\n  const linesAlerts = alertsForLines(alerts, lines)\n  const detailIds = detailIdsForAlerts(linesAlerts)\n\n  // filter to alerts with intersection\n  const linesStationsAlerts = alertsFilteredByDetailIds(linesAlerts, detailIds)\n  return linesStationsAlerts\n}\n\nconst alerts = async ({ healthboardClient, detailsClient, store }) => {\n  const [healthboard, details] = await Promise.all([\n    healthboardClient.fetch(),\n    detailsClient.fetch()\n  ])\n  const healthboardAlerts = idMapToList(healthboard).map(convertAlerts)\n  const alertDetails = { ...details, alerts: idListToMap(details.alerts) }\n  store.save({ healthboardAlerts, alertDetails })\n\n  return {\n    alerts: () => store.alerts(),\n    alertCounts: () => store.alertCounts(),\n    alertDetails: id => store.alertDetails(id),\n    lastUpdated: () => store.lastUpdated(),\n    lastSync: () => store.lastSync(),\n    alertsForLinesStations: (lines, stations) =>\n      alertsForLinesStations(store.alerts(), lines, stations)\n  }\n}\nconst __test__ = {\n  alertsForLines,\n  detailIdsForAlerts\n}\n\nexport { alerts, __test__ }\n","const anyIntersection = (aList, bList) =>\n  aList.reduce((acc, station) => acc || bList.includes(station), false)\n\nconst zip = (aList, bList) => aList.map((a, i) => [a, bList[i]])\n\nconst equalLists = (aList, bList) =>\n  aList.length === bList.length &&\n  zip(aList, bList)\n    .reduce((acc, [a, b]) => acc && (a === b), true)\n\nconst strictSubset = (short, long) => {\n  const smaller = short.length < long.length\n  const containsAll = equalLists(short, short.filter(it => long.includes(it)))\n  return smaller && containsAll\n}\n\nexport {\n  anyIntersection,\n  zip,\n  equalLists,\n  strictSubset\n}\n","import { anyIntersection, equalLists, strictSubset } from './arrayHelpers'\n\nconst findLinesWithContiguousRange = (stationsByLineName, a, b) => {\n  const searchResult = lines => ({ lines })\n  const searchError = error => ({ error })\n\n  if (a === b) {\n    return searchError('no need to catch the train')\n  }\n\n  const aLines = findLinesWith(stationsByLineName, a)\n  const bLines = findLinesWith(stationsByLineName, b)\n\n  if (aLines.length === 0 && bLines.length === 0) {\n    return searchError(`couldn't find either station`)\n  } else if (aLines.length === 0) {\n    return searchError(`couldn't find station \"${a}\"`)\n  } else if (bLines.length === 0) {\n    return searchError(`couldn't find station \"${b}\"`)\n  }\n\n  if (equalLists(aLines, bLines)) {\n    return searchResult(aLines)\n  }\n\n  if (!anyIntersection(aLines, bLines)) {\n    return searchError(`these aren't on the same line`)\n  }\n\n  const [short, long] = aLines.length < bLines.length ? [aLines, bLines] : [bLines, aLines]\n  if (strictSubset(short, long)) {\n    return searchResult(short)\n  }\n\n  return searchError('oh no')\n}\n\nconst intersectsCityLoop = (cityLoopStations, a, b) =>\n  cityLoopStations.includes(a) || cityLoopStations.includes(b)\n\n// const debug = (label = 'debug', obj) => { console.log(label, obj) }\n\nconst findLinesWith = (stationsByLineName, a) =>\n  Object.entries(stationsByLineName)\n    .reduce((acc, [line, stations]) => (\n      stations.includes(a) ? [...acc, line] : acc\n    ), [])\n\nconst stationRange = (stationsByLineName, line, a, b) => {\n  const lineStations = stationsByLineName[line]\n  const iA = lineStations.indexOf(a)\n  const iB = lineStations.indexOf(b)\n\n  if (iA < 0 || iB < 0) {\n    return []\n  }\n\n  const [start, end] = iA < iB ? [iA, iB] : [iB, iA]\n  const stations = lineStations.slice(start, end + 1)\n  return (stations[0] === a)\n    ? stations\n    : stations.reverse()\n}\n\nconst stationSearch = ({ store }) => ({\n  search: (a, b) => {\n    const cityLoop = intersectsCityLoop(store.cityLoopStations(), a, b)\n    const linesResult = findLinesWithContiguousRange(store.stationsByLineName(), a, b)\n    if (linesResult.error) {\n      return linesResult\n    }\n    const lines = linesResult.lines\n    const line = lines[0]\n    const stations = line ? stationRange(store.stationsByLineName(), line, a, b) : []\n    return {\n      cityLoop, lines, stations\n    }\n  }\n})\nconst __test__ = {\n  anyIntersection,\n  findLinesWith,\n  findLinesWithContiguousRange,\n  intersectsCityLoop,\n  stationRange\n}\n\nexport { stationSearch, __test__ }\n","import { getJsonClient, store } from '../api'\nimport { alerts, stationSearch } from '../domain'\n\nconst publicJson = filename => process.env.NODE_ENV === 'development'\n  ? `${process.env.PUBLIC_URL}/${filename}.json`\n  : process.env[`REACT_APP_${filename.toUpperCase()}_URL`]\n\nconst healthboardUrl = publicJson('healthboard_alerts')\nconst detailsUrl = publicJson('alert_details')\nconst metroVarsUrl = publicJson('metro_variables')\n\nconst healthboardClient = getJsonClient(healthboardUrl)\nconst detailsClient = getJsonClient(detailsUrl)\nconst metroVarsClient = getJsonClient(metroVarsUrl)\n\nconst buildDepGraph = async () => {\n  const dataStore = await store({ metroVarsClient })\n  const alertsManager = await alerts({ healthboardClient, detailsClient, store: dataStore })\n  const searchManager = stationSearch({ store: dataStore })\n\n  return {\n    domain: {\n      alerts: alertsManager,\n      search: searchManager\n    }\n  }\n}\n\nexport { buildDepGraph }\n","import React, { Component } from 'react'\n\nimport { Header, Footer } from './feature/bookends'\nimport { EmptyContent } from './feature/EmptyContent'\nimport { SearchResults, SearchInfo } from './feature/SearchResults'\nimport './App.css'\n\nimport { buildDepGraph } from './config'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      lastSync: 'Unknown',\n      lastUpdated: 'Unknown',\n      alertCounts: {},\n      alerts: [],\n      alertsForLinesStations: () => null,\n      getAlertDetails: () => null,\n      search: null,\n      searchInfo: null,\n      src: '',\n      dst: ''\n    }\n\n    this.loadQuerySearch = this.loadQuerySearch.bind(this)\n    this.search = this.search.bind(this)\n\n    window.onpopstate = this.loadQuerySearch\n  }\n\n  componentDidMount () {\n    buildDepGraph().then(graph => {\n      const alertsManager = graph.domain.alerts\n      this.setState({\n        lastUpdated: alertsManager.lastUpdated(),\n        lastSync: alertsManager.lastSync(),\n        alertCounts: alertsManager.alertCounts(),\n        // alerts: alertsManager.alerts(),\n        getAlertDetails: alertsManager.alertDetails,\n        search: graph.domain.search.search,\n        alertsForLinesStations: alertsManager.alertsForLinesStations\n      })\n      this.loadQuerySearch()\n    })\n  }\n\n  loadQuerySearch () {\n    const params = new URL(window.location).searchParams\n    const [src, dst] = ['src', 'dst'].map(it => params.get(it) || '')\n    if (src && dst) {\n      this.search(src, dst)\n    }\n  }\n\n  search (a, b) {\n    this.setState({ src: a, dst: b })\n    const searchInfo = this.state.search(a, b)\n    this.setState({ searchInfo })\n    const alerts = this.state.alertsForLinesStations(searchInfo.lines, searchInfo.stations)\n    this.setState({ alerts })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <Header search={this.search} src={this.state.src} dst={this.state.dst} />\n        <div className='content'>\n          {this.state.searchInfo ? <SearchInfo {...this.state.searchInfo} /> : null}\n          {(this.state.alerts || []).length > 0 ? (\n            <SearchResults\n              alerts={this.state.alerts}\n              getAlertDetails={this.state.getAlertDetails}\n            />\n          ) : (\n            <EmptyContent />\n          )}\n        </div>\n        <Footer\n          alerts={this.state.alertCounts}\n          lastSync={this.state.lastSync}\n          lastUpdate={this.state.lastUpdated}\n        />\n      </div>\n    )\n  }\n}\n\nexport { App }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}