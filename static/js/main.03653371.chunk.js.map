{"version":3,"sources":["feature/EmptyContent/logo.svg","feature/SearchBar/SearchBar.js","feature/bookends/Header.jsx","feature/TotalAlerts/TotalAlerts.jsx","feature/LastUpdate/LastUpdate.jsx","feature/Attrib/Attrib.jsx","feature/bookends/Footer.jsx","feature/EmptyContent/EmptyContent.jsx","feature/SearchResults/AlertDetail/AlertDetail.jsx","feature/SearchResults/Alert/Alert.jsx","feature/SearchResults/SearchResults.jsx","feature/SearchResults/SearchInfo.jsx","api/getJsonClient.js","api/store.js","domain/alerts.js","domain/stationSearch.js","config/depGraph.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","StationSelect","_ref","initial","placeholder","onChange","extraClass","react_default","a","createElement","className","concat","name","toLowerCase","type","value","SearchButton","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","params","URL","window","location","searchParams","_map","map","it","get","_map2","slicedToArray","src","dst","state","handleChange","bind","assertThisInitialized","handleSubmit","key","_this2","event","setState","defineProperty","target","preventDefault","_this$state","history","pushState","search","onSubmit","SearchBar_StationSelect","SearchBar_SearchButton","Component","Header","SearchBar_SearchBar","AlertsBadge","count","TotalAlerts","_ref2","alerts","TotalAlerts_AlertsBadge","total","ingested","pending","LastUpdate","lastUpdate","Attrib","href","rel","Footer","TotalAlerts_TotalAlerts","LastUpdate_LastUpdate","Attrib_Attrib","EmptyContent","logo","alt","Uningested","Outage","area","from","to","desc","iso","AlertDetail","id","title","outages","link","i","AlertDetail_Outage","assign","AlertDetail_Uningested","Alert","line","plannedWorks","getAlertDetails","getDetail","detail","AlertDetail_AlertDetail","detailById","SearchResults","Alert_Alert","SearchInfo","cityLoop","lines","stations","error","join","getJsonClient","url","fetch","_fetch","apply","arguments","toString","then","response","json","details","fetchDate","releaseDate","metroVars","calculateAlertCounts","keys","length","k","filter","store","asyncToGenerator","regenerator_default","mark","_callee","metroVarsClient","wrap","_context","prev","next","sent","abrupt","save","_ref3","healthboardAlerts","alertDetails","alertCounts","lastUpdated","stationsByLineName","network","cityLoopStations","stop","_x","idMapToList","objectSpread","convertAlerts","line_name","planned_works_list","healthboardClient","detailsClient","_ref4","healthboard","Promise","all","list","fromEntries","anyIntersection","aList","bList","reduce","acc","station","includes","equalLists","zip","b","findLinesWithContiguousRange","searchResult","searchError","aLines","findLinesWith","bLines","short","long","smaller","containsAll","strictSubset","intersectsCityLoop","entries","_ref5","_ref6","toConsumableArray","callbacks","linesForStations","stationRangeForStations","stationSearch","_ref7","registerFor","cb","push","result","forEach","publicJson","filename","process","toUpperCase","healthboardUrl","detailsUrl","metroVarsUrl","buildDepGraph","dataStore","alertsManager","searchManager","domain","hooks","App","receiveResult","loadQuerySearch","graph","onpopstate","_this3","Header_Header","SearchInfo_SearchInfo","SearchResults_SearchResults","EmptyContent_EmptyContent","Footer_Footer","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03653371.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5901d734.svg\";","import React, { Component } from 'react'\n\nimport './style.css'\n\nconst StationSelect = ({ initial, placeholder, onChange, extraClass }) => (\n  <input {...{\n    className: `search ${extraClass} bordered radius-m`,\n    name: placeholder.toLowerCase(),\n    type: 'text',\n    value: initial,\n    placeholder,\n    onChange\n  }} />\n)\n\nconst SearchButton = () => (\n  <input className='search end bordered radius-m' type='submit' value='Search' />\n)\n\nclass SearchBar extends Component {\n  constructor (props) {\n    super(props)\n\n    const params = new URL(window.location).searchParams\n    const [src, dst] = ['src', 'dst'].map(it => params.get(it) || '')\n    this.state = { src, dst }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange (key) {\n    return (event) => {\n      this.setState({\n        [key]: event.target.value\n      })\n    }\n  }\n\n  handleSubmit (event) {\n    event.preventDefault()\n    const { src, dst } = this.state\n    window.history.pushState(null, '', `?src=${src}&dst=${dst}`)\n    this.props.search(src, dst)\n  }\n\n  render () {\n    return (\n      <form className='search' onSubmit={this.handleSubmit}>\n        <StationSelect\n          initial={this.state.src}\n          placeholder='Origin'\n          onChange={this.handleChange('src')}\n          extraClass='start'\n        />\n        <StationSelect\n          initial={this.state.dst}\n          placeholder='Destination'\n          onChange={this.handleChange('dst')}\n          extraClass='middle'\n        />\n        <SearchButton />\n      </form>\n    )\n  }\n}\n\nexport { SearchBar }\n","import React from 'react'\n\nimport { SearchBar } from '../SearchBar'\nimport './style.css'\n\nconst Header = ({ search }) => (\n  <header>\n    <span className='title'><span className='icon'>⚠</span> Legible Works</span>\n    <SearchBar search={search} />\n  </header>\n)\n\nexport { Header }\n","import React from 'react'\n\nimport './style.css'\n\nconst AlertsBadge = ({ count, type }) => (\n  <span className={`alert ${type} bordered radius-m`}>\n    {count || '?'}\n  </span>\n)\n\nconst TotalAlerts = ({ alerts }) => (\n  <div>\n    <AlertsBadge count={alerts.total} type='total' /> alert details\n    (<AlertsBadge count={alerts.ingested} type='ingested' /> ingested,\n    {` `}<AlertsBadge count={alerts.pending} type='pending' /> pending)\n  </div>\n)\n\nexport { TotalAlerts }\n","import React from 'react'\n\nimport './style.css'\n\nconst LastUpdate = ({ lastUpdate }) => (\n  <div>\n    Last updated: <span className='updated'>{lastUpdate}</span>\n  </div>\n)\n\nexport { LastUpdate }\n","import React from 'react'\n\nimport './style.css'\n\nconst Attrib = () => (\n  <div>\n    Licensed under AGPL 3+.\n    Source at <a\n      href='https://github.com/orochi-kazu/metro-planned-works'\n      target='_blank' // eslint-disable-line react/jsx-no-target-blank\n      rel='noopener'\n    >GitHub</a>\n  </div>\n)\n\nexport { Attrib }\n","import React from 'react'\n\nimport { TotalAlerts } from '../TotalAlerts'\nimport { LastUpdate } from '../LastUpdate'\nimport { Attrib } from '../Attrib'\nimport './style.css'\n\nconst Footer = ({ alerts, lastUpdate }) => (\n  <footer>\n    <TotalAlerts {...{ alerts }} />\n    <LastUpdate {...{ lastUpdate }} />\n    <Attrib />\n  </footer>\n)\n\nexport { Footer }\n","import React from 'react'\n\nimport logo from './logo.svg'\nimport './style.css'\n\nconst EmptyContent = () => (\n  <div className='empty-content'>\n    <img className='logo' src={logo} alt='App logo: a caution sign' />\n  </div>\n)\n\nexport { EmptyContent }\n","import React from 'react'\n\nimport './style.css'\n\nconst Uningested = () => (\n  <div className='outage uningested bordered radius-m'>\n    Pending\n  </div>\n)\n\nconst Outage = ({ area, from, to }) => (\n  <div className='outage bordered radius-m'>\n    <div className='outage-desc'>&quot;{area.desc}&quot;</div>\n    <div>Starts: {from.iso}</div>\n    <div>Ends: {to.iso}</div>\n  </div>\n)\n\nconst AlertDetail = ({ id, title, outages, link }) => (\n  <div className='detail bordered radius-m'>\n    <div className='alert-title'>\n      <span>\n        {title}\n        <span className='nowrap'> (<a\n          href={link}\n          target='_blank' // eslint-disable-line react/jsx-no-target-blank\n          rel='noopener'\n        >Metro</a>)\n        </span>\n      </span>\n    </div>\n    <div>\n      {outages ? outages.map((it, i) => <Outage {...it} key={i} />) : <Uningested />}\n    </div>\n  </div>\n)\n\nexport { AlertDetail }\n","import React from 'react'\n\nimport { AlertDetail } from '../AlertDetail'\n\nimport './style.css'\n\nconst detailById = getAlertDetails => (id, title) => {\n  const detail = getAlertDetails(id)\n  return detail ? <AlertDetail {...detail} title={title} key={id} /> : null\n}\n\nconst Alert = ({ id, alerts, line, plannedWorks, getAlertDetails }) => {\n  if (!plannedWorks) {\n    return null\n  }\n  const getDetail = detailById(getAlertDetails)\n  return (\n    <div className='alert-summary bordered radius-m'>\n      <div className='alert-summary-title'>\n        <span className='alert-summary-title'>{line || 'Unnamed line'}</span>\n        {line ? '' : <span>&nbsp;({id})</span>}\n      </div>\n      {plannedWorks.map(it => getDetail(it.id, it.title))}\n    </div>\n  )\n}\n\nexport { Alert }\n","import React from 'react'\n\nimport { Alert } from './Alert'\n\nconst SearchResults = ({ alerts, getAlertDetails }) => alerts.map(it => (\n  <Alert {...it} getAlertDetails={getAlertDetails} key={it.id} />\n))\n\nexport { SearchResults }\n","import React from 'react'\n\nconst SearchInfo = ({ cityLoop, lines, stations }) =>\n  (lines || {}).error ? (\n    <div className='results-intro'>\n      <div>Something went wrong: {lines.error}</div>\n    </div>\n  ) : (\n    <div className='results-intro'>\n      <div>City Loop? {cityLoop ? 'Yes' : 'No'}</div>\n      <div>Lines: {((lines || {}).lines || []).join(', ')}</div>\n      <div>Stations: {stations}</div>\n    </div>\n  )\n\nexport { SearchInfo }\n","const getJsonClient = url => ({\n  fetch: () => fetch(url).then(response => response.json())\n})\n\nexport { getJsonClient }\n","let alerts = []\n\nlet details = {\n  alerts: {},\n  fetchDate: '',\n  releaseDate: ''\n}\n\nlet metroVars = {}\n\nconst calculateAlertCounts = () => {\n  const keys = Object.keys(details.alerts)\n  const total = keys.length\n  const ingested = keys.map(k => details.alerts[k]).filter(it => it.outages).length\n  const pending = total - ingested\n\n  return { total, ingested, pending }\n}\n\nconst store = async ({ metroVarsClient }) => {\n  metroVars = await metroVarsClient.fetch()\n  return {\n    save: ({ healthboardAlerts, alertDetails }) => {\n      alerts = healthboardAlerts\n      details = alertDetails\n    },\n    alerts: () => alerts,\n    alertCounts: () => calculateAlertCounts(),\n    alertDetails: id => details.alerts[id],\n    lastUpdated: () => details.releaseDate,\n    stationsByLineName: () => metroVars.network || {},\n    cityLoopStations: () => metroVars.cityLoopStations\n  }\n}\n\nexport { store }\n","const idMapToList = map => Object.keys(map)\n  .map(it => ({\n    ...map[it],\n    id: it\n  }))\n\nconst idListToMap = list => Object.fromEntries(\n  list.map(it => [it.id, it])\n)\n\nconst convertAlerts = it => ({\n  id: it.id,\n  line: it.line_name,\n  plannedWorks: it.planned_works_list\n})\n\nconst alerts = async ({ healthboardClient, detailsClient, store }) => {\n  const [healthboard, details] = await Promise.all([\n    healthboardClient.fetch(),\n    detailsClient.fetch()\n  ])\n  const healthboardAlerts = idMapToList(healthboard).map(convertAlerts)\n  const alertDetails = { ...details, alerts: idListToMap(details.alerts) }\n  store.save({ healthboardAlerts, alertDetails })\n\n  return {\n    alerts: () => store.alerts(),\n    alertCounts: () => store.alertCounts(),\n    alertDetails: id => store.alertDetails(id),\n    lastUpdated: () => store.lastUpdated()\n  }\n}\n\nexport { alerts }\n","const anyIntersection = (aList, bList) =>\n  aList.reduce((acc, station) => acc || bList.includes(station), false)\n\nconst zip = (aList, bList) => aList.map((a, i) => [a, bList[i]])\n\nconst equalLists = (aList, bList) =>\n  aList.length === bList.length &&\n  zip(aList, bList)\n    .reduce((acc, [a, b]) => acc && (a === b), true)\n\nconst strictSubset = (short, long) => {\n  const smaller = short.length < long.length\n  const containsAll = equalLists(short, short.filter(it => long.includes(it)))\n  return smaller && containsAll\n}\n\nconst findLinesWithContiguousRange = (stationsByLineName, a, b) => {\n  const searchResult = lines => ({ lines })\n  const searchError = error => ({ error })\n\n  if (a === b) {\n    return searchError('no need to catch the train')\n  }\n\n  const aLines = findLinesWith(stationsByLineName, a)\n  const bLines = findLinesWith(stationsByLineName, b)\n\n  if (aLines.length === 0 && bLines.length === 0) {\n    return searchError(`couldn't find either station`)\n  } else if (aLines.length === 0) {\n    return searchError(`couldn't find station \"${a}\"`)\n  } else if (bLines.length === 0) {\n    return searchError(`couldn't find station \"${b}\"`)\n  }\n\n  if (equalLists(aLines, bLines)) {\n    return searchResult(aLines)\n  }\n\n  if (!anyIntersection(aLines, bLines)) {\n    return searchError(`these aren't on the same line`)\n  }\n\n  const [short, long] = aLines.length < bLines.length ? [aLines, bLines] : [bLines, aLines]\n  if (strictSubset(short, long)) {\n    return searchResult(short)\n  }\n\n  return searchError('oh no')\n}\n\nconst intersectsCityLoop = (cityLoopStations, a, b) =>\n  cityLoopStations.includes(a) || cityLoopStations.includes(b)\n\n// const debug = (label = 'debug', obj) => { console.log(label, obj) }\n\nconst findLinesWith = (stationsByLineName, a) =>\n  Object.entries(stationsByLineName)\n    .reduce((acc, [line, stations]) => (\n      stations.includes(a) ? [...acc, line] : acc\n    ), [])\n\nconst callbacks = {\n  intersectsCityLoop: [],\n  linesForStations: [],\n  stationRangeForStations: []\n}\n\nconst stationSearch = ({ store }) => ({\n  registerFor: {\n    intersectsCityLoop: cb => { callbacks.intersectsCityLoop.push(cb) },\n    linesForStations: cb => { callbacks.linesForStations.push(cb) },\n    stationRangeForStations: cb => { callbacks.stationRangeForStations.push(cb) }\n  },\n  intersectsCityLoop: (a, b) => {\n    const result = intersectsCityLoop(store.cityLoopStations(), a, b)\n    callbacks.intersectsCityLoop.forEach(cb => { cb(result) })\n  },\n  linesForStations: (a, b) => {\n    const result = findLinesWithContiguousRange(store.stationsByLineName(), a, b)\n    callbacks.linesForStations.forEach(cb => { cb(result) })\n  },\n  stationRangeForStations: (a, b) => {}\n})\nconst __test__ = {\n  anyIntersection,\n  findLinesWith,\n  findLinesWithContiguousRange,\n  intersectsCityLoop\n}\n\nexport { stationSearch, __test__ }\n","import { getJsonClient, store } from '../api'\nimport { alerts, stationSearch } from '../domain'\n\nconst publicJson = filename => process.env.NODE_ENV === 'development'\n  ? `${process.env.PUBLIC_URL}/${filename}.json`\n  : process.env[`REACT_APP_${filename.toUpperCase()}_URL`]\n\nconst healthboardUrl = publicJson('healthboard_alerts')\nconst detailsUrl = publicJson('alert_details')\nconst metroVarsUrl = publicJson('metro_variables')\n\nconst healthboardClient = getJsonClient(healthboardUrl)\nconst detailsClient = getJsonClient(detailsUrl)\nconst metroVarsClient = getJsonClient(metroVarsUrl)\n\nconst buildDepGraph = async () => {\n  const dataStore = await store({ metroVarsClient })\n  const alertsManager = await alerts({ healthboardClient, detailsClient, store: dataStore })\n  const searchManager = stationSearch({ store: dataStore })\n\n  return {\n    domain: {\n      alerts: alertsManager,\n      search: searchManager\n    }\n  }\n}\n\nexport { buildDepGraph }\n","import React, { Component } from 'react'\n\nimport { Header, Footer } from './feature/bookends'\nimport { EmptyContent } from './feature/EmptyContent'\nimport { SearchResults, SearchInfo } from './feature/SearchResults'\nimport './App.css'\n\nimport { buildDepGraph } from './config'\nlet alertsManager = null\n\nconst hooks = [\n  'intersectsCityLoop',\n  'linesForStations',\n  'stationRangeForStations'\n]\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      alertCounts: {},\n      lastUpdated: 'Unknown',\n      alerts: [],\n      getAlertDetails: () => null,\n      search: null\n    }\n\n    this.receiveResult = this.receiveResult.bind(this)\n    this.search = this.search.bind(this)\n    this.loadQuerySearch = this.loadQuerySearch.bind(this)\n\n    buildDepGraph().then(graph => {\n      hooks.forEach(it => {\n        graph.domain.search.registerFor[it](this.receiveResult(it))\n      })\n\n      alertsManager = graph.domain.alerts\n      this.setState({\n        lastUpdated: alertsManager.lastUpdated(),\n        alertCounts: alertsManager.alertCounts(),\n        // alerts: alertsManager.alerts(),\n        getAlertDetails: alertsManager.alertDetails,\n        search: graph.domain.search\n      })\n\n      this.loadQuerySearch()\n    })\n\n    window.onpopstate = this.loadQuerySearch\n  }\n\n  loadQuerySearch () {\n    const params = new URL(window.location).searchParams\n    const [src, dst] = ['src', 'dst'].map(it => params.get(it) || '')\n    if (src && dst) {\n      this.search(src, dst)\n    }\n  }\n\n  receiveResult (key) {\n    return result => {\n      this.setState({\n        [key]: result\n      })\n    }\n  }\n\n  search (a, b) {\n    hooks.forEach(it => {\n      this.state.search[it](a, b)\n    })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <Header search={this.search} />\n        <div className='content'>\n          {this.state.linesForStations ? (\n            <SearchInfo\n              cityLoop={this.state.intersectsCityLoop}\n              lines={this.state.linesForStations}\n              stations={this.state.stationRangeForStations}\n            />\n          ) : (\n            null\n          )}\n          {(this.state.alerts || []).length > 0 ? (\n            <SearchResults\n              alerts={this.state.alerts}\n              getAlertDetails={this.state.getAlertDetails}\n            />\n          ) : (\n            <EmptyContent />\n          )}\n        </div>\n        <Footer alerts={this.state.alertCounts} lastUpdate={this.state.lastUpdated} />\n      </div>\n    )\n  }\n}\n\nexport { App }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}